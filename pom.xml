<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- When changing the version of parent, remember to modify the version attributes in the properties at the same time -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.6</version>
    </parent>

    <groupId>com.schbrain.framework</groupId>
    <artifactId>schbrain-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!-- used to replace spring's Apache Licence -->
    <licenses>
        <license>
            <name>schbrain</name>
            <url>https://www.schbrain.com</url>
        </license>
    </licenses>

    <!-- used to replace spring's developer settings -->
    <developers>
        <developer>
            <name>schbrain</name>
        </developer>
    </developers>

    <properties>
        <java.version>11</java.version>

        <springboot.version>2.6.6</springboot.version>
        <spring.cloud-version>2021.0.1</spring.cloud-version>

        <!-- 2th part version -->
        <schbrain-common.version>1.0.8-SNAPSHOT</schbrain-common.version>
        <schbrain-spring-support.version>1.0.5</schbrain-spring-support.version>
        <schbrain-dubbo.version>1.0.1</schbrain-dubbo.version>
        <schbrain-mybatis.version>1.0.6</schbrain-mybatis.version>
        <schbrain-apollo.version>1.0.5</schbrain-apollo.version>
        <schbrain-logger.version>1.0.5</schbrain-logger.version>
        <schbrain-oss.version>1.0.3</schbrain-oss.version>
        <schbrain-xxl.version>1.0.4</schbrain-xxl.version>

        <!-- fastjson 被 aliyun 系列 sdk 强依赖,所以定在父 pom,方便统一进行版本管理,方便快速响应 bug 版本升级 -->
        <fastjson.version>1.2.80</fastjson.version>

        <!-- utils -->
        <jsr305.version>3.0.2</jsr305.version>
        <guava.version>31.1-jre</guava.version>
        <!-- used for apollo -->
        <guice.version>5.1.0</guice.version>
        <hutool.version>5.7.22</hutool.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-io.version>2.11.0</commons-io.version>
        <!-- excel -->
        <easyexcel.version>3.0.5</easyexcel.version>
        <!-- database related -->
        <mybatis-plus.version>3.5.1</mybatis-plus.version>
        <dynamic-datasource.version>3.5.0</dynamic-datasource.version>
        <druid.version>1.2.9</druid.version>
        <!-- dubbo related -->
        <dubbo.version>3.0.7</dubbo.version>
        <curator.version>4.3.0</curator.version>
        <zookeeper.version>3.4.14</zookeeper.version>
        <!-- apollo -->
        <apollo.version>1.9.2</apollo.version>
        <!-- aliyun -->
        <aliyun.oss.version>3.14.1</aliyun.oss.version>
        <!-- logstash-logback-encoder -->
        <logstash-logback-encoder.version>7.1.1</logstash-logback-encoder.version>
        <!-- xxl-job -->
        <xxl-job.version>2.0.2</xxl-job.version>

        <!-- maven plugins -->
        <flatten-maven-plugin.version>1.2.7</flatten-maven-plugin.version>
        <integration-maven-plugin.version>1.0.1</integration-maven-plugin.version>

        <maven.repository.url>https://maven.schbrain.com/repository</maven.repository.url>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- 二方包 -->
            <dependency>
                <groupId>com.schbrain.framework</groupId>
                <artifactId>schbrain-spring-support</artifactId>
                <version>${schbrain-spring-support.version}</version>
            </dependency>
            <dependency>
                <groupId>com.schbrain.framework</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${schbrain-dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>com.schbrain.framework</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${schbrain-mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>com.schbrain.framework</groupId>
                <artifactId>apollo-spring-boot-starter</artifactId>
                <version>${schbrain-apollo.version}</version>
            </dependency>
            <dependency>
                <groupId>com.schbrain.framework</groupId>
                <artifactId>logger-spring-boot-starter</artifactId>
                <version>${schbrain-logger.version}</version>
            </dependency>
            <dependency>
                <groupId>com.schbrain.framework</groupId>
                <artifactId>oss-spring-boot-starter</artifactId>
                <version>${schbrain-oss.version}</version>
            </dependency>
            <dependency>
                <groupId>com.schbrain.framework</groupId>
                <artifactId>xxl-job-spring-boot-starter</artifactId>
                <version>${schbrain-xxl.version}</version>
            </dependency>
            <dependency>
                <groupId>com.schbrain.common</groupId>
                <artifactId>common</artifactId>
                <version>${schbrain-common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.schbrain.common</groupId>
                <artifactId>web-common</artifactId>
                <version>${schbrain-common.version}</version>
            </dependency>
            <!-- 三方包 -->
            <!-- utils -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${jsr305.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>
            <!-- dubbo related -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <!-- user single dependency instead of dubbo-bom,because dubbo-bom set the spring version-->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-common</artifactId>
                <version>${dubbo.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>log4j</artifactId>
                        <groupId>log4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-filter-validation</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-config-spring</artifactId>
                <version>${dubbo.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-web</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-remoting-netty4</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-rpc-dubbo</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-registry-zookeeper</artifactId>
                <version>${dubbo.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.dubbo</groupId>
                        <artifactId>dubbo-remoting-zookeeper-curator5</artifactId>
                    </exclusion>
                    <exclusion>
                        <artifactId>log4j</artifactId>
                        <groupId>log4j</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.dubbo</groupId>
                        <artifactId>dubbo-container-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-serialization-hessian2</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-metadata-report-zookeeper</artifactId>
                <version>${dubbo.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.dubbo</groupId>
                        <artifactId>dubbo-configcenter-zookeeper</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <!-- mybatis -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>javax.annotation-api</artifactId>
                        <groupId>javax.annotation</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!-- apollo -->
            <dependency>
                <groupId>com.ctrip.framework.apollo</groupId>
                <artifactId>apollo-client</artifactId>
                <version>${apollo.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>
            <!-- aliyun oss-->
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun.oss.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-logging</artifactId>
                        <groupId>commons-logging</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- logstash-logback-encoder -->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>
            <!-- xxl-job -->
            <dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxl-job.version}</version>
            </dependency>
            <!--spring cloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>source</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <configuration>
                            <updatePomFile>true</updatePomFile>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <flattenMode>resolveCiFriendliesOnly</flattenMode>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.build.outputDirectory}/META-INF</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>spring-configuration-metadata.json</include>
                                    </includes>
                                </resource>
                            </resources>
                            <outputDirectory>${basedir}/src/main/resources/META-INF</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>repackage</id>
                            <phase>package</phase>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>buildInfo</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <configuration>
                        <verbose>false</verbose>
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                        <dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
                        <dateFormatTimeZone>GMT+8</dateFormatTimeZone>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.schbrain.maven.plugin</groupId>
                    <artifactId>integration-maven-plugin</artifactId>
                    <version>${integration-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>prepare</id>
                            <phase>package</phase>
                            <goals>
                                <goal>prepare</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!-- 开发环境 -->
        <profile>
            <id>dev</id>
            <properties>
                <spring.profile>dev</spring.profile>
                <docker.registry>registry-vpc.cn-hangzhou.aliyuncs.com/schbrain-dev</docker.registry>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 测试环境 -->
        <profile>
            <id>test</id>
            <properties>
                <spring.profile>test</spring.profile>
                <docker.registry>registry-vpc.cn-hangzhou.aliyuncs.com/schbrain-dev</docker.registry>
            </properties>
        </profile>
        <!-- 生产环境 -->
        <profile>
            <id>prod</id>
            <properties>
                <spring.profile>prod</spring.profile>
                <docker.registry>registry-vpc.cn-hangzhou.aliyuncs.com/schbrain</docker.registry>
            </properties>
        </profile>
    </profiles>

    <distributionManagement>
        <repository>
            <id>libs-releases</id>
            <url>${maven.repository.url}/maven-releases</url>
        </repository>
        <snapshotRepository>
            <id>libs-snapshots</id>
            <url>${maven.repository.url}/maven-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>libs-releases</id>
            <url>${maven.repository.url}/maven-releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>libs-snapshots</id>
            <url>${maven.repository.url}/maven-snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <updatePolicy>always</updatePolicy>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>plugin-releases</id>
            <url>${maven.repository.url}/maven-releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>plugin-snapshots</id>
            <url>${maven.repository.url}/maven-snapshots</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>